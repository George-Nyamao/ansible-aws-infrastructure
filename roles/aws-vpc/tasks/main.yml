---
- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ aws_region }}"
    dns_hostnames: "{{ enable_dns_hostnames }}"
    dns_support: "{{ enable_dns_support }}"
    tags: "{{ common_tags }}"
    state: present
  register: vpc
  tags: aws, vpc

- name: Set VPC ID fact
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"
  tags: aws, vpc

- name: Create Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ vpc_name }}-igw"
    state: present
  register: igw
  tags: aws, vpc

- name: Create public subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ aws_region }}"
    map_public: true
    tags:
      Name: "{{ vpc_name }}-public-{{ item.az }}"
      Type: "public"
    state: present
  loop:
    - { cidr: "{{ public_subnet_cidrs[0] }}", az: "{{ aws_availability_zones[0] }}" }
    - { cidr: "{{ public_subnet_cidrs[1] }}", az: "{{ aws_availability_zones[1] }}" }
  register: public_subnets
  tags: aws, vpc, subnets

- name: Create private subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ aws_region }}"
    map_public: false
    tags:
      Name: "{{ vpc_name }}-private-{{ item.az }}"
      Type: "private"
    state: present
  loop:
    - { cidr: "{{ private_subnet_cidrs[0] }}", az: "{{ aws_availability_zones[0] }}" }
    - { cidr: "{{ private_subnet_cidrs[1] }}", az: "{{ aws_availability_zones[1] }}" }
  register: private_subnets
  tags: aws, vpc, subnets

- name: Create NAT Gateway EIP
  amazon.aws.ec2_eip:
    region: "{{ aws_region }}"
    tags:
      Name: "{{ vpc_name }}-nat-eip"
    state: present
  register: nat_eip
  tags: aws, vpc, nat

- name: Create NAT Gateway
  amazon.aws.ec2_vpc_nat_gateway:
    subnet_id: "{{ public_subnets.results[0].subnet.id }}"
    eip_address: "{{ nat_eip.public_ip }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ vpc_name }}-nat-gateway"
    state: present
  register: nat_gateway
  tags: aws, vpc, nat

- name: Create public route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ vpc_name }}-public-rt"
    subnets:
      - "{{ public_subnets.results[0].subnet.id }}"
      - "{{ public_subnets.results[1].subnet.id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw.gateway_id }}"
    state: present
  tags: aws, vpc, routing

- name: Create private route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    tags:
      Name: "{{ vpc_name }}-private-rt"
    subnets:
      - "{{ private_subnets.results[0].subnet.id }}"
      - "{{ private_subnets.results[1].subnet.id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    state: present
  tags: aws, vpc, routing

- name: Save VPC information
  copy:
    content: |
      VPC ID: {{ vpc_id }}
      Internet Gateway: {{ igw.gateway_id }}
      NAT Gateway: {{ nat_gateway.nat_gateway_id }}
      Public Subnets:
      {% for subnet in public_subnets.results %}
        - {{ subnet.subnet.id }} ({{ subnet.subnet.cidr_block }})
      {% endfor %}
      Private Subnets:
      {% for subnet in private_subnets.results %}
        - {{ subnet.subnet.id }} ({{ subnet.subnet.cidr_block }})
      {% endfor %}
    dest: ./vpc_info.txt
  delegate_to: localhost
  tags: aws, vpc
